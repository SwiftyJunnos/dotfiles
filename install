#!/usr/bin/env bash

print_info() {
  printf "\033[0;32m==> %s\033[0m\n" "$*"
}

print_error() {
    printf "\033[0;31m%s\033[0m\n" "$*" >&2
    exit 1
}

# -e: exit on error
# -u: exit on undefined variable
set -eu

if ! chezmoi="$(command -v chezmoi)"; then
    # check current os
    os=$(uname -s)

    case $os in
        "Darwin")
            if command -v brew >/dev/null; then
                bin_dir="$(brew --prefix)/bin"
                chezmoi="${bin_dir}/chezmoi"
                print_info "Installing chezmoi via 🍺 Homebrew to ${chezmoi}"
                sh -c "brew install chezmoi"
            else
                print_error "To install chezmoi, you must have Homebrew installed first."
            fi
            ;;
        "Linux")
            if [ -f "/etc/lsb-release" ] && grep -q "Ubuntu" "/etc/lsb-release"; then
                bin_dir="${HOME}/.local/bin"
                chezmoi="${bin_dir}/chezmoi"
                print_info "Installing chezmoi to ${chezmoi}"
                if command -v curl >/dev/null; then
                    sh -c "$(curl -fsSL get.chezmoi.io)" -- -b "$bin_dir"
                elif command -v wget >/dev/null; then
                    sh -c "$(wget -qO- get.chezmoi.io)" -- -b "$bin_dir"
                else
                    print_error "To install chezmoi, you must have curl or wget installed."
                fi
            else
                print_error "This script only supports Ubuntu for Linux systems."
            fi
            ;;
        *)
            print_error "This script only supports macOS and Ubuntu."
            ;;
    esac
    unset bin_dir
else
    print_info "chezmoi already installed. Continuing to initialization."
fi

# Current directory where script is running
print_info "Running chezmoi init"

extra_args="--apply"

{
    exec "${chezmoi}" init ${extra_args}
    print_info "chezmoi initialized at $(${chezmoi} source-path)"
} || {
    print_error "chezmoi initialization failed."
}
